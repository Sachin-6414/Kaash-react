{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sachin\\\\OneDrive\\\\Desktop\\\\kaash-react\\\\kaash-react\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport '../Navbar/Navbar.css';\nimport logo from '../../images/logo.png';\nimport PropTypes from 'prop-types';\n// import { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Nav = () => {\n  _s();\n  //Set the nav to open or closed on mobile\n  //(won't do anything on desktop as menu-toggle is hidden)\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  //We want to hide when nothing on the menu has focus\n  //But every time we tab to a new link, the previous one loses focus and will hide the menu\n  //So we tell it to show the menu if a link has focus\n  //Which means hide will only run if no link has focus\n  //(Technically it briefly runs between tabs, but it's so quick we don't see it)\n  const hide = () => setIsOpen(false);\n  const show = () => setIsOpen(true);\n\n  //Close nav when escape key is pressed\n  useEffect(() => {\n    const closeMenu = event => {\n      if (event.key === 'Escape') {\n        setIsOpen(false);\n      }\n    };\n    window.addEventListener('keydown', closeMenu);\n    return () => {\n      window.removeEventListener('keydown', closeMenu);\n    };\n  }, []);\n\n  //Find height of nav and set the margin-top on body to be that\n  const targetRef = useRef();\n  useLayoutEffect(() => {\n    document.body.style.marginTop = targetRef.current.offsetHeight + 'px';\n  });\n  const navigation = [{\n    link: '/',\n    text: 'Home'\n  }, {\n    link: '/houses',\n    text: 'Buy or sell a house'\n  }, {\n    link: '/buildings',\n    text: 'Build a house'\n  }, {\n    link: '/offices',\n    text: 'Rent an office'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    ref: targetRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"menu-toggle\",\n      onClick: toggle,\n      title: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `menu ${isOpen ? 'cross' : ''}`,\n        \"data-testid\": \"menuToggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `menu-links ${isOpen ? 'show' : ''}`,\n      children: navigation.map((nav, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          exact: true,\n          to: nav.link,\n          activeClassName: \"active\",\n          onClick: hide,\n          onBlur: hide,\n          onFocus: show,\n          children: nav.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Nav, \"M8Ig86YwD8Oewu3A8hSocrX6vKo=\");\n_c = Nav;\nNav.propTypes = {\n  isOpen: PropTypes.bool,\n  setIsOpen: PropTypes.func\n};\nexport default Nav;\n{/* <nav className='nav'>\r\n      <div className=\"logo\">\r\n        <a href=\"/\"><img id='logo' src={logo} alt=\"Logo\" /></a>\r\n      </div>\r\n      <ul className=\"nav-links\">\r\n        <li><button id='contact'>Contact Us</button></li>\r\n        <li><button id='menu' onClick={toggleMenu}>Menu</button></li>\r\n        {isOpen && (\r\n        <ul className='links' ref={menuRef}>\r\n          <li>Home</li>\r\n          <li>About</li>\r\n          <li>Contact</li>\r\n        </ul>\r\n      )}\r\n      </ul>\r\n    </nav> */}\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","useEffect","logo","PropTypes","jsxDEV","_jsxDEV","Nav","_s","isOpen","setIsOpen","toggle","hide","show","closeMenu","event","key","window","addEventListener","removeEventListener","targetRef","document","body","style","marginTop","current","offsetHeight","navigation","link","text","ref","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","map","nav","index","NavLink","exact","to","activeClassName","onBlur","onFocus","_c","propTypes","bool","func","$RefreshReg$"],"sources":["C:/Users/sachin/OneDrive/Desktop/kaash-react/kaash-react/src/Components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\r\nimport '../Navbar/Navbar.css';\r\nimport logo from '../../images/logo.png';\r\nimport PropTypes from 'prop-types';\r\n// import { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n  //Set the nav to open or closed on mobile\r\n  //(won't do anything on desktop as menu-toggle is hidden)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  //We want to hide when nothing on the menu has focus\r\n  //But every time we tab to a new link, the previous one loses focus and will hide the menu\r\n  //So we tell it to show the menu if a link has focus\r\n  //Which means hide will only run if no link has focus\r\n  //(Technically it briefly runs between tabs, but it's so quick we don't see it)\r\n  const hide = () => setIsOpen(false);\r\n  const show = () => setIsOpen(true);\r\n\r\n  //Close nav when escape key is pressed\r\n  useEffect(() => {\r\n    const closeMenu = (event) => {\r\n      if (event.key === 'Escape') {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', closeMenu);\r\n    return () => {\r\n      window.removeEventListener('keydown', closeMenu);\r\n    };\r\n  }, []);\r\n\r\n  //Find height of nav and set the margin-top on body to be that\r\n  const targetRef = useRef();\r\n  useLayoutEffect(() => {\r\n    document.body.style.marginTop = targetRef.current.offsetHeight + 'px';\r\n  });\r\n\r\n  const navigation = [\r\n    { link: '/', text: 'Home' },\r\n    { link: '/houses', text: 'Buy or sell a house' },\r\n    { link: '/buildings', text: 'Build a house' },\r\n    { link: '/offices', text: 'Rent an office' },\r\n  ];\r\n\r\n  return (\r\n    <nav ref={targetRef}>\r\n      <button className=\"menu-toggle\" onClick={toggle} title=\"menu\">\r\n        <span\r\n          className={`menu ${isOpen ? 'cross' : ''}`}\r\n          data-testid=\"menuToggle\"\r\n        ></span>\r\n      </button>\r\n      <ul className={`menu-links ${isOpen ? 'show' : ''}`}>\r\n        {navigation.map((nav, index) => (\r\n          <li key={index}>\r\n            <NavLink\r\n              exact\r\n              to={nav.link}\r\n              activeClassName=\"active\"\r\n              onClick={hide}\r\n              onBlur={hide}\r\n              onFocus={show}\r\n            >\r\n              {nav.text}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {/* <LightDark /> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNav.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  setIsOpen: PropTypes.func,\r\n};\r\n\r\nexport default Nav;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <nav className='nav'>\r\n      <div className=\"logo\">\r\n        <a href=\"/\"><img id='logo' src={logo} alt=\"Logo\" /></a>\r\n      </div>\r\n      <ul className=\"nav-links\">\r\n        <li><button id='contact'>Contact Us</button></li>\r\n        <li><button id='menu' onClick={toggleMenu}>Menu</button></li>\r\n        {isOpen && (\r\n        <ul className='links' ref={menuRef}>\r\n          <li>Home</li>\r\n          <li>About</li>\r\n          <li>Contact</li>\r\n        </ul>\r\n      )}\r\n      </ul>\r\n    </nav> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}